{
  "address": "0x3d08265f9ad4E0357c6919572fc7A816B0B6C43E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_anyToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_toChainId",
          "type": "uint256"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        }
      ],
      "name": "updateRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x74c92f95c92cca68203d4f48e7a3e93bf39c007a5e8a4c2a7e942b59db5f4775",
  "receipt": {
    "to": null,
    "from": "0x335e2912D888F76326e806C666B690Df2D886D07",
    "contractAddress": "0x3d08265f9ad4E0357c6919572fc7A816B0B6C43E",
    "transactionIndex": 42,
    "gasUsed": "873502",
    "logsBloom": "0x
    "blockHash": "0xe0c12d3e82531111d9960f53b2eae80121b6cc3e9822609b0d5d432cc963ad12",
    "transactionHash": "0x74c92f95c92cca68203d4f48e7a3e93bf39c007a5e8a4c2a7e942b59db5f4775",
    "logs": [
      {
        "transactionIndex": 42,
        "blockNumber": 26476647,
        "transactionHash": "0x74c92f95c92cca68203d4f48e7a3e93bf39c007a5e8a4c2a7e942b59db5f4775",
        "address": "0x3d08265f9ad4E0357c6919572fc7A816B0B6C43E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000335e2912d888f76326e806c666b690df2d886d07"
        ],
        "data": "0x",
        "logIndex": 97,
        "blockHash": "0xe0c12d3e82531111d9960f53b2eae80121b6cc3e9822609b0d5d432cc963ad12"
      },
      {
        "transactionIndex": 42,
        "blockNumber": 26476647,
        "transactionHash": "0x74c92f95c92cca68203d4f48e7a3e93bf39c007a5e8a4c2a7e942b59db5f4775",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000335e2912d888f76326e806c666b690df2d886d07",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x000000000000000000000000000000000000000000000000008ba60b7a4d4a980000000000000000000000000000000000000000000000002faa43602a64da68000000000000000000000000000000000000000000003b3992d6f3971955a89f0000000000000000000000000000000000000000000000002f1e9d54b0178fd0000000000000000000000000000000000000000000003b39936299a293a2f337",
        "logIndex": 98,
        "blockHash": "0xe0c12d3e82531111d9960f53b2eae80121b6cc3e9822609b0d5d432cc963ad12"
      }
    ],
    "blockNumber": 26476647,
    "cumulativeGasUsed": "4929080",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4f3aff3a747fcade12598081e80c6605a8be192f"
  ],
  "numDeployments": 3,
  "solcInputHash": "6fb398d6b6b7b6a5ea4ba2b7966b2c1d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"UpdatedRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toChainId\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"updateRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/Anyswap.sol\":\"Anyswap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/bridge/Anyswap.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"./IBridge.sol\\\";\\n\\ninterface AnyswapRouter {\\n    function anySwapOutUnderlying(address token, address to, uint amount, uint toChainID) external;\\n}\\n\\ncontract Anyswap is IBridge {\\n    AnyswapRouter private bridge;\\n\\n    constructor(address bridgeAddress) {\\n        bridge = AnyswapRouter(bridgeAddress);\\n    }\\n\\n    function send(\\n        address _anyToken,\\n        address _token,\\n        address _recipient,\\n        uint256 _amount,\\n        uint256 _toChainId\\n    ) external override onlyRouter {\\n        // Take ownership of tokens\\n        TransferHelper.safeTransferFrom(_token, _recipient, address(this), _amount);\\n\\n        // Approve tokens for the bridge to take\\n        TransferHelper.safeApprove(_token, address(bridge), _amount);\\n\\n        // Execute bridge process\\n        bridge.anySwapOutUnderlying(_anyToken, _recipient, _amount, _toChainId);\\n    }\\n}\\n\",\"keccak256\":\"0x521894da3001651e28a95aa935d946f183acbb3bd6864aa43a1fec1f9009741e\",\"license\":\"MIT\"},\"contracts/bridge/IBridge.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract IBridge is Ownable {\\n    address private router;\\n\\n    modifier onlyRouter() {\\n        require(msg.sender == router, \\\"Unauthorized caller\\\");\\n        _;\\n    }\\n\\n    event UpdatedRouter(address indexed routerAddress);\\n\\n    function updateRouter(address routerAddress) external onlyOwner {\\n        router = routerAddress;\\n        emit UpdatedRouter(routerAddress);\\n    }\\n\\n    function send(\\n        address _anyToken,\\n        address _token,\\n        address _to,\\n        uint256 _amount,\\n        uint256 _toChainId\\n    ) external virtual;\\n}\\n\",\"keccak256\":\"0x525643bd9638fb8b562b80c0489146c733c3a99c248a8576157a838d8f1c2227\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000ff938038062000ff9833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b610ded806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063c851cc3214610084578063cffdc521146100a0578063f2fde38b146100bc575b600080fd5b6100646100d8565b005b61006e610160565b60405161007b9190610a7d565b60405180910390f35b61009e6004803603810190610099919061089f565b610189565b005b6100ba60048036038101906100b591906108c8565b61028c565b005b6100d660048036038101906100d1919061089f565b6103ef565b005b6100e06104e7565b73ffffffffffffffffffffffffffffffffffffffff166100fe610160565b73ffffffffffffffffffffffffffffffffffffffff1614610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b90610b9d565b60405180910390fd5b61015e60006104ef565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101916104e7565b73ffffffffffffffffffffffffffffffffffffffff166101af610160565b73ffffffffffffffffffffffffffffffffffffffff1614610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc90610b9d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f66fc0187dfabf79860e1b18e6c175c92baf9ed88c8a01d0bfdb97d1f0450f7f760405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610b7d565b60405180910390fd5b610328848430856105b3565b61035584600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461070b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663edbdf5e2868585856040518563ffffffff1660e01b81526004016103b69493929190610acf565b600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050505050505050565b6103f76104e7565b73ffffffffffffffffffffffffffffffffffffffff16610415610160565b73ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610b9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290610b5d565b60405180910390fd5b6104e4816104ef565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016105ea93929190610a98565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106549190610a66565b6000604051808303816000865af19150503d8060008114610691576040519150601f19603f3d011682016040523d82523d6000602084013e610696565b606091505b50915091508180156106c457506000815114806106c35750808060200190518101906106c2919061093f565b5b5b610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90610bbd565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610740929190610b14565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107aa9190610a66565b6000604051808303816000865af19150503d80600081146107e7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ec565b606091505b509150915081801561081a5750600081511480610819575080806020019051810190610818919061093f565b5b5b610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610b3d565b60405180910390fd5b5050505050565b60008135905061086f81610d72565b92915050565b60008151905061088481610d89565b92915050565b60008135905061089981610da0565b92915050565b6000602082840312156108b157600080fd5b60006108bf84828501610860565b91505092915050565b600080600080600060a086880312156108e057600080fd5b60006108ee88828901610860565b95505060206108ff88828901610860565b945050604061091088828901610860565b93505060606109218882890161088a565b92505060806109328882890161088a565b9150509295509295909350565b60006020828403121561095157600080fd5b600061095f84828501610875565b91505092915050565b61097181610c04565b82525050565b600061098282610bdd565b61098c8185610be8565b935061099c818560208601610c4c565b80840191505092915050565b60006109b5600283610bf3565b91506109c082610c7f565b602082019050919050565b60006109d8602683610bf3565b91506109e382610ca8565b604082019050919050565b60006109fb601383610bf3565b9150610a0682610cf7565b602082019050919050565b6000610a1e602083610bf3565b9150610a2982610d20565b602082019050919050565b6000610a41600383610bf3565b9150610a4c82610d49565b602082019050919050565b610a6081610c42565b82525050565b6000610a728284610977565b915081905092915050565b6000602082019050610a926000830184610968565b92915050565b6000606082019050610aad6000830186610968565b610aba6020830185610968565b610ac76040830184610a57565b949350505050565b6000608082019050610ae46000830187610968565b610af16020830186610968565b610afe6040830185610a57565b610b0b6060830184610a57565b95945050505050565b6000604082019050610b296000830185610968565b610b366020830184610a57565b9392505050565b60006020820190508181036000830152610b56816109a8565b9050919050565b60006020820190508181036000830152610b76816109cb565b9050919050565b60006020820190508181036000830152610b96816109ee565b9050919050565b60006020820190508181036000830152610bb681610a11565b9050919050565b60006020820190508181036000830152610bd681610a34565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610c0f82610c22565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c6a578082015181840152602081019050610c4f565b83811115610c79576000848401525b50505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f556e617574686f72697a65642063616c6c657200000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b610d7b81610c04565b8114610d8657600080fd5b50565b610d9281610c16565b8114610d9d57600080fd5b50565b610da981610c42565b8114610db457600080fd5b5056fea2646970667358221220c58c06f833f9c4bf423e23f580ae7d4609c872f18c09fadec86affe94271c17a64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063c851cc3214610084578063cffdc521146100a0578063f2fde38b146100bc575b600080fd5b6100646100d8565b005b61006e610160565b60405161007b9190610a7d565b60405180910390f35b61009e6004803603810190610099919061089f565b610189565b005b6100ba60048036038101906100b591906108c8565b61028c565b005b6100d660048036038101906100d1919061089f565b6103ef565b005b6100e06104e7565b73ffffffffffffffffffffffffffffffffffffffff166100fe610160565b73ffffffffffffffffffffffffffffffffffffffff1614610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b90610b9d565b60405180910390fd5b61015e60006104ef565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101916104e7565b73ffffffffffffffffffffffffffffffffffffffff166101af610160565b73ffffffffffffffffffffffffffffffffffffffff1614610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc90610b9d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f66fc0187dfabf79860e1b18e6c175c92baf9ed88c8a01d0bfdb97d1f0450f7f760405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031390610b7d565b60405180910390fd5b610328848430856105b3565b61035584600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461070b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663edbdf5e2868585856040518563ffffffff1660e01b81526004016103b69493929190610acf565b600060405180830381600087803b1580156103d057600080fd5b505af11580156103e4573d6000803e3d6000fd5b505050505050505050565b6103f76104e7565b73ffffffffffffffffffffffffffffffffffffffff16610415610160565b73ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290610b9d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290610b5d565b60405180910390fd5b6104e4816104ef565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b8686866040516024016105ea93929190610a98565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106549190610a66565b6000604051808303816000865af19150503d8060008114610691576040519150601f19603f3d011682016040523d82523d6000602084013e610696565b606091505b50915091508180156106c457506000815114806106c35750808060200190518101906106c2919061093f565b5b5b610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90610bbd565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610740929190610b14565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107aa9190610a66565b6000604051808303816000865af19150503d80600081146107e7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ec565b606091505b509150915081801561081a5750600081511480610819575080806020019051810190610818919061093f565b5b5b610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610b3d565b60405180910390fd5b5050505050565b60008135905061086f81610d72565b92915050565b60008151905061088481610d89565b92915050565b60008135905061089981610da0565b92915050565b6000602082840312156108b157600080fd5b60006108bf84828501610860565b91505092915050565b600080600080600060a086880312156108e057600080fd5b60006108ee88828901610860565b95505060206108ff88828901610860565b945050604061091088828901610860565b93505060606109218882890161088a565b92505060806109328882890161088a565b9150509295509295909350565b60006020828403121561095157600080fd5b600061095f84828501610875565b91505092915050565b61097181610c04565b82525050565b600061098282610bdd565b61098c8185610be8565b935061099c818560208601610c4c565b80840191505092915050565b60006109b5600283610bf3565b91506109c082610c7f565b602082019050919050565b60006109d8602683610bf3565b91506109e382610ca8565b604082019050919050565b60006109fb601383610bf3565b9150610a0682610cf7565b602082019050919050565b6000610a1e602083610bf3565b9150610a2982610d20565b602082019050919050565b6000610a41600383610bf3565b9150610a4c82610d49565b602082019050919050565b610a6081610c42565b82525050565b6000610a728284610977565b915081905092915050565b6000602082019050610a926000830184610968565b92915050565b6000606082019050610aad6000830186610968565b610aba6020830185610968565b610ac76040830184610a57565b949350505050565b6000608082019050610ae46000830187610968565b610af16020830186610968565b610afe6040830185610a57565b610b0b6060830184610a57565b95945050505050565b6000604082019050610b296000830185610968565b610b366020830184610a57565b9392505050565b60006020820190508181036000830152610b56816109a8565b9050919050565b60006020820190508181036000830152610b76816109cb565b9050919050565b60006020820190508181036000830152610b96816109ee565b9050919050565b60006020820190508181036000830152610bb681610a11565b9050919050565b60006020820190508181036000830152610bd681610a34565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610c0f82610c22565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c6a578082015181840152602081019050610c4f565b83811115610c79576000848401525b50505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f556e617574686f72697a65642063616c6c657200000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b610d7b81610c04565b8114610d8657600080fd5b50565b610d9281610c16565b8114610d9d57600080fd5b50565b610da981610c42565b8114610db457600080fd5b5056fea2646970667358221220c58c06f833f9c4bf423e23f580ae7d4609c872f18c09fadec86affe94271c17a64736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/bridge/Anyswap.sol:Anyswap",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 691,
        "contract": "contracts/bridge/Anyswap.sol:Anyswap",
        "label": "router",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 622,
        "contract": "contracts/bridge/Anyswap.sol:Anyswap",
        "label": "bridge",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AnyswapRouter)617"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AnyswapRouter)617": {
        "encoding": "inplace",
        "label": "contract AnyswapRouter",
        "numberOfBytes": "20"
      }
    }
  }
}
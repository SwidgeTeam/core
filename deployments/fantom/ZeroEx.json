{
  "address": "0x3c12C54d9F1Cf162BB962e9A6D28fcc176621392",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "retrieve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "boughtAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_routerAddress",
          "type": "address"
        }
      ],
      "name": "updateRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0bc0669d5293fd30de5ca86e133bf7a33afc1617382e8fbaf8e72b2007b8843c",
  "receipt": {
    "to": null,
    "from": "0x7228ebf7C311e82867F08Ad6Dd3FCfbC2adB41A9",
    "contractAddress": "0x3c12C54d9F1Cf162BB962e9A6D28fcc176621392",
    "transactionIndex": 0,
    "gasUsed": "1248515",
    "logsBloom": "0x00000000000000000080000200000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001020000000000000000000000000000000000020000000000000000000800000008000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000008000",
    "blockHash": "0x0001a2b900000656c2b23f50b46919e12315c45ec75d160fa7d1419caf9735ef",
    "transactionHash": "0x0bc0669d5293fd30de5ca86e133bf7a33afc1617382e8fbaf8e72b2007b8843c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 37214066,
        "transactionHash": "0x0bc0669d5293fd30de5ca86e133bf7a33afc1617382e8fbaf8e72b2007b8843c",
        "address": "0x3c12C54d9F1Cf162BB962e9A6D28fcc176621392",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007228ebf7c311e82867f08ad6dd3fcfbc2adb41a9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0001a2b900000656c2b23f50b46919e12315c45ec75d160fa7d1419caf9735ef"
      }
    ],
    "blockNumber": 37214066,
    "cumulativeGasUsed": "1248515",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "62b2119cdd6cc5a25e657401162b2e2b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"UpdatedRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"boughtAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_routerAddress\",\"type\":\"address\"}],\"name\":\"updateRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dexs/ZeroEx.sol\":\"ZeroEx\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Provider.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\n\\nabstract contract Provider is Ownable {\\n    address private router;\\n\\n    modifier onlyRouter() {\\n        require(msg.sender == router, \\\"Unauthorized caller\\\");\\n        _;\\n    }\\n\\n    event UpdatedRouter(address indexed routerAddress);\\n\\n    function updateRouter(address _routerAddress) external onlyOwner {\\n        router = _routerAddress;\\n        emit UpdatedRouter(_routerAddress);\\n    }\\n\\n    function retrieve(address _token, uint256 _amount) external onlyOwner {\\n        TransferHelper.safeTransfer(_token, msg.sender, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xad3d682037351375ca4ca43c7f72d0bc2ccf46ece52d63983d2d08d12e4e9a5e\",\"license\":\"MIT\"},\"contracts/dexs/IDEX.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Provider.sol\\\";\\n\\nabstract contract IDEX is Provider {\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _router,\\n        uint256 _amountIn,\\n        bytes calldata _data\\n    ) external payable virtual returns (uint256 amountOut);\\n}\\n\",\"keccak256\":\"0x3d56b3a4cebdd81d11eb6833ad5c1ed0c7a7457e3e4aaf9c80471986d07ca9cf\",\"license\":\"Unlicense\"},\"contracts/dexs/ZeroEx.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\nimport \\\"./IDEX.sol\\\";\\n\\ncontract ZeroEx is IDEX {\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _router,\\n        uint256 _amountIn,\\n        bytes calldata _data\\n    ) external payable override onlyRouter returns (uint256 boughtAmount) {\\n        TransferHelper.safeTransferFrom(_tokenIn, _router, address(this), _amountIn);\\n\\n        (address callAddress, bytes memory callData) = abi.decode(_data, (address, bytes));\\n\\n        TransferHelper.safeApprove(_tokenIn, callAddress, _amountIn);\\n\\n        // Execute swap with ZeroEx and compute final `boughtAmount`\\n        boughtAmount = IERC20(_tokenOut).balanceOf(address(this));\\n        (bool success,) = callAddress.call{value : msg.value}(callData);\\n        require(success, \\\"SWAP FAILED\\\");\\n        boughtAmount = IERC20(_tokenOut).balanceOf(address(this)) - boughtAmount;\\n\\n        TransferHelper.safeTransfer(_tokenOut, _router, boughtAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x24a7dcb5e92eda879e453cd4da17d1de90c3eda7471e193fe79441adfd71836c\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61153f8061010d6000396000f3fe6080604052600436106100555760003560e01c8063715018a61461005a5780638da5cb5b14610071578063c3a2a6651461009c578063c851cc32146100c5578063da145263146100ee578063f2fde38b1461011e575b600080fd5b34801561006657600080fd5b5061006f610147565b005b34801561007d57600080fd5b506100866101cf565b6040516100939190611005565b60405180910390f35b3480156100a857600080fd5b506100c360048036038101906100be9190610e1c565b6101f8565b005b3480156100d157600080fd5b506100ec60048036038101906100e79190610d0d565b610283565b005b61010860048036038101906101039190610d8a565b610386565b6040516101159190611160565b60405180910390f35b34801561012a57600080fd5b5061014560048036038101906101409190610d0d565b61062c565b005b61014f610724565b73ffffffffffffffffffffffffffffffffffffffff1661016d6101cf565b73ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90611120565b60405180910390fd5b6101cd600061072c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610200610724565b73ffffffffffffffffffffffffffffffffffffffff1661021e6101cf565b73ffffffffffffffffffffffffffffffffffffffff1614610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90611120565b60405180910390fd5b61027f8233836107f0565b5050565b61028b610724565b73ffffffffffffffffffffffffffffffffffffffff166102a96101cf565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690611120565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f66fc0187dfabf79860e1b18e6c175c92baf9ed88c8a01d0bfdb97d1f0450f7f760405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040f906110e0565b60405180910390fd5b61042487863087610945565b60008084848101906104369190610d36565b91509150610445898388610a9d565b8773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047e9190611005565b60206040518083038186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190610e81565b925060008273ffffffffffffffffffffffffffffffffffffffff1634836040516104f89190610fee565b60006040518083038185875af1925050503d8060008114610535576040519150601f19603f3d011682016040523d82523d6000602084013e61053a565b606091505b505090508061057e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610575906110a0565b60405180910390fd5b838973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105b89190611005565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610e81565b61061291906111f8565b935061061f8989866107f0565b5050509695505050505050565b610634610724565b73ffffffffffffffffffffffffffffffffffffffff166106526101cf565b73ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90611120565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f906110c0565b60405180910390fd5b6107218161072c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610825929190611057565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161088f9190610fee565b6000604051808303816000865af19150503d80600081146108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b50915091508180156108ff57506000815114806108fe5750808060200190518101906108fd9190610e58565b5b5b61093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093590611100565b60405180910390fd5b5050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161097c93929190611020565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109e69190610fee565b6000604051808303816000865af19150503d8060008114610a23576040519150601f19603f3d011682016040523d82523d6000602084013e610a28565b606091505b5091509150818015610a565750600081511480610a55575080806020019051810190610a549190610e58565b5b5b610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611140565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610ad2929190611057565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b3c9190610fee565b6000604051808303816000865af19150503d8060008114610b79576040519150601f19603f3d011682016040523d82523d6000602084013e610b7e565b606091505b5091509150818015610bac5750600081511480610bab575080806020019051810190610baa9190610e58565b5b5b610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611080565b60405180910390fd5b5050505050565b6000610c05610c00846111a0565b61117b565b905082815260208101848484011115610c1d57600080fd5b610c28848285611286565b509392505050565b600081359050610c3f816114ad565b92915050565b600081359050610c54816114c4565b92915050565b600081519050610c69816114db565b92915050565b60008083601f840112610c8157600080fd5b8235905067ffffffffffffffff811115610c9a57600080fd5b602083019150836001820283011115610cb257600080fd5b9250929050565b600082601f830112610cca57600080fd5b8135610cda848260208601610bf2565b91505092915050565b600081359050610cf2816114f2565b92915050565b600081519050610d07816114f2565b92915050565b600060208284031215610d1f57600080fd5b6000610d2d84828501610c30565b91505092915050565b60008060408385031215610d4957600080fd5b6000610d5785828601610c45565b925050602083013567ffffffffffffffff811115610d7457600080fd5b610d8085828601610cb9565b9150509250929050565b60008060008060008060a08789031215610da357600080fd5b6000610db189828a01610c30565b9650506020610dc289828a01610c30565b9550506040610dd389828a01610c30565b9450506060610de489828a01610ce3565b935050608087013567ffffffffffffffff811115610e0157600080fd5b610e0d89828a01610c6f565b92509250509295509295509295565b60008060408385031215610e2f57600080fd5b6000610e3d85828601610c30565b9250506020610e4e85828601610ce3565b9150509250929050565b600060208284031215610e6a57600080fd5b6000610e7884828501610c5a565b91505092915050565b600060208284031215610e9357600080fd5b6000610ea184828501610cf8565b91505092915050565b610eb38161122c565b82525050565b6000610ec4826111d1565b610ece81856111dc565b9350610ede818560208601611295565b80840191505092915050565b6000610ef76002836111e7565b9150610f0282611368565b602082019050919050565b6000610f1a600b836111e7565b9150610f2582611391565b602082019050919050565b6000610f3d6026836111e7565b9150610f48826113ba565b604082019050919050565b6000610f606013836111e7565b9150610f6b82611409565b602082019050919050565b6000610f836002836111e7565b9150610f8e82611432565b602082019050919050565b6000610fa66020836111e7565b9150610fb18261145b565b602082019050919050565b6000610fc96003836111e7565b9150610fd482611484565b602082019050919050565b610fe88161127c565b82525050565b6000610ffa8284610eb9565b915081905092915050565b600060208201905061101a6000830184610eaa565b92915050565b60006060820190506110356000830186610eaa565b6110426020830185610eaa565b61104f6040830184610fdf565b949350505050565b600060408201905061106c6000830185610eaa565b6110796020830184610fdf565b9392505050565b6000602082019050818103600083015261109981610eea565b9050919050565b600060208201905081810360008301526110b981610f0d565b9050919050565b600060208201905081810360008301526110d981610f30565b9050919050565b600060208201905081810360008301526110f981610f53565b9050919050565b6000602082019050818103600083015261111981610f76565b9050919050565b6000602082019050818103600083015261113981610f99565b9050919050565b6000602082019050818103600083015261115981610fbc565b9050919050565b60006020820190506111756000830184610fdf565b92915050565b6000611185611196565b905061119182826112c8565b919050565b6000604051905090565b600067ffffffffffffffff8211156111bb576111ba611328565b5b6111c482611357565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006112038261127c565b915061120e8361127c565b925082821015611221576112206112f9565b5b828203905092915050565b60006112378261125c565b9050919050565b60006112498261125c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156112b3578082015181840152602081019050611298565b838111156112c2576000848401525b50505050565b6112d182611357565b810181811067ffffffffffffffff821117156112f0576112ef611328565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f53574150204641494c4544000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f556e617574686f72697a65642063616c6c657200000000000000000000000000600082015250565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6114b68161122c565b81146114c157600080fd5b50565b6114cd8161123e565b81146114d857600080fd5b50565b6114e481611250565b81146114ef57600080fd5b50565b6114fb8161127c565b811461150657600080fd5b5056fea264697066735822122022baa2d81405ed17e59a7d02a84af8263121c3b648d388c7b5906bddc2c8360664736f6c63430008010033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c8063715018a61461005a5780638da5cb5b14610071578063c3a2a6651461009c578063c851cc32146100c5578063da145263146100ee578063f2fde38b1461011e575b600080fd5b34801561006657600080fd5b5061006f610147565b005b34801561007d57600080fd5b506100866101cf565b6040516100939190611005565b60405180910390f35b3480156100a857600080fd5b506100c360048036038101906100be9190610e1c565b6101f8565b005b3480156100d157600080fd5b506100ec60048036038101906100e79190610d0d565b610283565b005b61010860048036038101906101039190610d8a565b610386565b6040516101159190611160565b60405180910390f35b34801561012a57600080fd5b5061014560048036038101906101409190610d0d565b61062c565b005b61014f610724565b73ffffffffffffffffffffffffffffffffffffffff1661016d6101cf565b73ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90611120565b60405180910390fd5b6101cd600061072c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610200610724565b73ffffffffffffffffffffffffffffffffffffffff1661021e6101cf565b73ffffffffffffffffffffffffffffffffffffffff1614610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90611120565b60405180910390fd5b61027f8233836107f0565b5050565b61028b610724565b73ffffffffffffffffffffffffffffffffffffffff166102a96101cf565b73ffffffffffffffffffffffffffffffffffffffff16146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690611120565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f66fc0187dfabf79860e1b18e6c175c92baf9ed88c8a01d0bfdb97d1f0450f7f760405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040f906110e0565b60405180910390fd5b61042487863087610945565b60008084848101906104369190610d36565b91509150610445898388610a9d565b8773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161047e9190611005565b60206040518083038186803b15801561049657600080fd5b505afa1580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce9190610e81565b925060008273ffffffffffffffffffffffffffffffffffffffff1634836040516104f89190610fee565b60006040518083038185875af1925050503d8060008114610535576040519150601f19603f3d011682016040523d82523d6000602084013e61053a565b606091505b505090508061057e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610575906110a0565b60405180910390fd5b838973ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105b89190611005565b60206040518083038186803b1580156105d057600080fd5b505afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190610e81565b61061291906111f8565b935061061f8989866107f0565b5050509695505050505050565b610634610724565b73ffffffffffffffffffffffffffffffffffffffff166106526101cf565b73ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90611120565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f906110c0565b60405180910390fd5b6107218161072c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610825929190611057565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161088f9190610fee565b6000604051808303816000865af19150503d80600081146108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b50915091508180156108ff57506000815114806108fe5750808060200190518101906108fd9190610e58565b5b5b61093e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093590611100565b60405180910390fd5b5050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161097c93929190611020565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516109e69190610fee565b6000604051808303816000865af19150503d8060008114610a23576040519150601f19603f3d011682016040523d82523d6000602084013e610a28565b606091505b5091509150818015610a565750600081511480610a55575080806020019051810190610a549190610e58565b5b5b610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611140565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610ad2929190611057565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b3c9190610fee565b6000604051808303816000865af19150503d8060008114610b79576040519150601f19603f3d011682016040523d82523d6000602084013e610b7e565b606091505b5091509150818015610bac5750600081511480610bab575080806020019051810190610baa9190610e58565b5b5b610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611080565b60405180910390fd5b5050505050565b6000610c05610c00846111a0565b61117b565b905082815260208101848484011115610c1d57600080fd5b610c28848285611286565b509392505050565b600081359050610c3f816114ad565b92915050565b600081359050610c54816114c4565b92915050565b600081519050610c69816114db565b92915050565b60008083601f840112610c8157600080fd5b8235905067ffffffffffffffff811115610c9a57600080fd5b602083019150836001820283011115610cb257600080fd5b9250929050565b600082601f830112610cca57600080fd5b8135610cda848260208601610bf2565b91505092915050565b600081359050610cf2816114f2565b92915050565b600081519050610d07816114f2565b92915050565b600060208284031215610d1f57600080fd5b6000610d2d84828501610c30565b91505092915050565b60008060408385031215610d4957600080fd5b6000610d5785828601610c45565b925050602083013567ffffffffffffffff811115610d7457600080fd5b610d8085828601610cb9565b9150509250929050565b60008060008060008060a08789031215610da357600080fd5b6000610db189828a01610c30565b9650506020610dc289828a01610c30565b9550506040610dd389828a01610c30565b9450506060610de489828a01610ce3565b935050608087013567ffffffffffffffff811115610e0157600080fd5b610e0d89828a01610c6f565b92509250509295509295509295565b60008060408385031215610e2f57600080fd5b6000610e3d85828601610c30565b9250506020610e4e85828601610ce3565b9150509250929050565b600060208284031215610e6a57600080fd5b6000610e7884828501610c5a565b91505092915050565b600060208284031215610e9357600080fd5b6000610ea184828501610cf8565b91505092915050565b610eb38161122c565b82525050565b6000610ec4826111d1565b610ece81856111dc565b9350610ede818560208601611295565b80840191505092915050565b6000610ef76002836111e7565b9150610f0282611368565b602082019050919050565b6000610f1a600b836111e7565b9150610f2582611391565b602082019050919050565b6000610f3d6026836111e7565b9150610f48826113ba565b604082019050919050565b6000610f606013836111e7565b9150610f6b82611409565b602082019050919050565b6000610f836002836111e7565b9150610f8e82611432565b602082019050919050565b6000610fa66020836111e7565b9150610fb18261145b565b602082019050919050565b6000610fc96003836111e7565b9150610fd482611484565b602082019050919050565b610fe88161127c565b82525050565b6000610ffa8284610eb9565b915081905092915050565b600060208201905061101a6000830184610eaa565b92915050565b60006060820190506110356000830186610eaa565b6110426020830185610eaa565b61104f6040830184610fdf565b949350505050565b600060408201905061106c6000830185610eaa565b6110796020830184610fdf565b9392505050565b6000602082019050818103600083015261109981610eea565b9050919050565b600060208201905081810360008301526110b981610f0d565b9050919050565b600060208201905081810360008301526110d981610f30565b9050919050565b600060208201905081810360008301526110f981610f53565b9050919050565b6000602082019050818103600083015261111981610f76565b9050919050565b6000602082019050818103600083015261113981610f99565b9050919050565b6000602082019050818103600083015261115981610fbc565b9050919050565b60006020820190506111756000830184610fdf565b92915050565b6000611185611196565b905061119182826112c8565b919050565b6000604051905090565b600067ffffffffffffffff8211156111bb576111ba611328565b5b6111c482611357565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006112038261127c565b915061120e8361127c565b925082821015611221576112206112f9565b5b828203905092915050565b60006112378261125c565b9050919050565b60006112498261125c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156112b3578082015181840152602081019050611298565b838111156112c2576000848401525b50505050565b6112d182611357565b810181811067ffffffffffffffff821117156112f0576112ef611328565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b7f53574150204641494c4544000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f556e617574686f72697a65642063616c6c657200000000000000000000000000600082015250565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6114b68161122c565b81146114c157600080fd5b50565b6114cd8161123e565b81146114d857600080fd5b50565b6114e481611250565b81146114ef57600080fd5b50565b6114fb8161127c565b811461150657600080fd5b5056fea264697066735822122022baa2d81405ed17e59a7d02a84af8263121c3b648d388c7b5906bddc2c8360664736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/dexs/ZeroEx.sol:ZeroEx",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 497,
        "contract": "contracts/dexs/ZeroEx.sol:ZeroEx",
        "label": "router",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}